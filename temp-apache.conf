<VirtualHost *:80>
    ServerName altaqastrategy.com
    ServerAlias www.altaqastrategy.com
    
    # Redirect all HTTP traffic to HTTPS
    RewriteEngine On
    RewriteCond %{HTTPS} off
    RewriteRule ^ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]
</VirtualHost>

<VirtualHost *:443>
    ServerName altaqastrategy.com
    ServerAlias www.altaqastrategy.com
    
    # SSL Configuration
    SSLEngine on
    SSLCertificateFile /etc/letsencrypt/live/altaqastrategy.com/fullchain.pem
    SSLCertificateKeyFile /etc/letsencrypt/live/altaqastrategy.com/privkey.pem
    Include /etc/letsencrypt/options-ssl-apache.conf

    # Proxy to Docker container
    ProxyPreserveHost On

    # Handle static assets directly
    ProxyPass /assets/ http://localhost:8081/assets/
    ProxyPassReverse /assets/ http://localhost:8081/assets/

    # Handle API requests
    ProxyPass /api http://localhost:8081/api
    ProxyPassReverse /api http://localhost:8081/api

    # Handle all other requests
    ProxyPass / http://localhost:8081/
    ProxyPassReverse / http://localhost:8081/

    # Allow .well-known for SSL renewal
    <Location /.well-known>
        ProxyPass !
    </Location>

    # Additional security headers
    Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains"
    Header always set X-Frame-Options SAMEORIGIN
    Header always set X-Content-Type-Options nosniff
    Header always set Access-Control-Allow-Origin "*"

    # Enable required modules
    <IfModule !mod_rewrite.c>
        LoadModule rewrite_module modules/mod_rewrite.so
    </IfModule>
    <IfModule !mod_proxy.c>
        LoadModule proxy_module modules/mod_proxy.so
    </IfModule>
    <IfModule !mod_proxy_http.c>
        LoadModule proxy_http_module modules/mod_proxy_http.so
    </IfModule>
    <IfModule !mod_ssl.c>
        LoadModule ssl_module modules/mod_ssl.so
    </IfModule>

    # Logging
    LogLevel info
    ErrorLog /var/log/apache2/altaqastrategy.com-error.log
    CustomLog /var/log/apache2/altaqastrategy.com-access.log combined
</VirtualHost> 